From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nesaak <52047222+Nesaak@users.noreply.github.com>
Date: Sat, 27 Jun 2020 09:39:27 -0400
Subject: [PATCH] Add Armor Stand Titles System


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 5a1f34930dd46cc2e4d35ab3e9b3a1a7585a01ae..7bbdb8d789a108c836bde2b702b02c501f0d0b55 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -26,6 +26,7 @@ import org.bukkit.Location;
 import org.bukkit.Server;
 import org.bukkit.block.BlockFace;
 import org.bukkit.command.CommandSender;
+import org.bukkit.craftbukkit.util.CraftChatMessage;
 import org.bukkit.entity.Hanging;
 import org.bukkit.entity.LivingEntity;
 import org.bukkit.entity.Vehicle;
@@ -212,6 +213,27 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
             }, trackedPlayer);
         }
     }
+    private String title;
+    public double titleHeight;
+    public void setTitle(String title) {
+        if (title == null) {
+            if (this.title != null) tracker.trackerEntry.broadcast(new PacketPlayOutEntityDestroy(id + 30000));
+        } else {
+            if (this.title == null) {
+                Vec3D vec3d = getMot();
+                double d1 = MathHelper.a(vec3d.x, -3.9D, 3.9D);
+                double d2 = MathHelper.a(vec3d.y, -3.9D, 3.9D);
+                double d3 = MathHelper.a(vec3d.z, -3.9D, 3.9D);
+                tracker.trackerEntry.broadcast(new PacketPlayOutSpawnEntityLiving(id + 30000, UUID.randomUUID(), 1, locX(), locY() + titleHeight, locZ(), (int) (d1 * 8000.0D), (int) (d2 * 8000.0D), (int) (d3 * 8000.0D), (byte) 0, (byte) 0, (byte) 0));
+            }
+            tracker.trackerEntry.broadcast(new PacketPlayOutEntityMetadata(id + 30000, Arrays.asList(DataWatcher.of(0, (byte) 32, DataWatcherRegistry.a), DataWatcher.of(2, Optional.of(CraftChatMessage.fromStringOrNull(title)), DataWatcherRegistry.f), DataWatcher.of(3, true, DataWatcherRegistry.i), DataWatcher.of(5, true, DataWatcherRegistry.i))));
+        }
+        this.title = title;
+    }
+
+    public String getTitle() {
+        return title;
+    }
     // Nesaak end
 
     public float getBukkitYaw() {
diff --git a/src/main/java/net/minecraft/server/EntityPacket.java b/src/main/java/net/minecraft/server/EntityPacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..4a8b60d330de61a03e521aa38ba0a346757a45f3
--- /dev/null
+++ b/src/main/java/net/minecraft/server/EntityPacket.java
@@ -0,0 +1,9 @@
+package net.minecraft.server;
+
+public interface EntityPacket<T extends PacketListener> extends Packet<T> {
+    EntityPacket setId(int id);
+
+    int getId();
+
+    EntityPacket clone();
+}
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index 62353aa33c8f2ac906cb97a7bf1d57f667defccb..60456663e5a44d9a8f332e70f558da38d170c24c 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -2,7 +2,6 @@ package net.minecraft.server;
 
 import java.util.Collection;
 import java.util.Collections;
-import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Set;
@@ -131,7 +130,7 @@ public class EntityTrackerEntry {
                 double vec3d_dz = this.tracker.locZ() - 2.44140625E-4D*(this.zLoc);
                 boolean flag1 = (vec3d_dx * vec3d_dx + vec3d_dy * vec3d_dy + vec3d_dz * vec3d_dz) >= 7.62939453125E-6D;
                 // Paper end - reduce allocation of Vec3D here
-                Packet<?> packet1 = null;
+                GroundPacket<?> packet1 = null;
                 boolean flag2 = flag1 || this.tickCounter % 60 == 0;
                 boolean flag3 = Math.abs(i - this.yRot) >= 1 || Math.abs(j - this.xRot) >= 1;
 
@@ -177,7 +176,9 @@ public class EntityTrackerEntry {
 
                     if (d0 > 1.0E-7D || d0 > 0.0D && vec3d1.g() == 0.0D) {
                         this.m = vec3d1;
-                        this.f.accept(new PacketPlayOutEntityVelocity(this.tracker.getId(), this.m));
+                        PacketPlayOutEntityVelocity vel = new PacketPlayOutEntityVelocity(this.tracker.getId(), this.m);
+                        this.f.accept(vel);
+                        if (tracker.getTitle() != null) this.f.accept(vel.clone().setId(vel.getId() + 30000));
                     }
                 }
 
@@ -185,6 +186,7 @@ public class EntityTrackerEntry {
                     // paper start
                     if (trackedPlayerMap == null || packet1 instanceof PacketPlayOutEntityTeleport) {
                         this.f.accept((packet1));
+                        if (tracker.getTitle() != null) this.f.accept((packet1.clone().setId(packet1.getId() + 30000)));
                     } else {
                         PacketPlayOutEntityTeleport teleportPacket = null;
 
@@ -195,8 +197,16 @@ public class EntityTrackerEntry {
                                     teleportPacket = new PacketPlayOutEntityTeleport(this.tracker);
                                 }
                                 sendPlayerPacket(viewer.getKey(), teleportPacket);
+                                if (tracker.getTitle() != null) sendPlayerPacket(viewer.getKey(), teleportPacket.clone().setId(teleportPacket.getId() + 30000).setY(teleportPacket.getY() + tracker.titleHeight).setOnGround(false));
                             } else {
                                 sendPlayerPacket(viewer.getKey(), packet1);
+                                if (tracker.getTitle() != null) {
+                                    GroundPacket clone = packet1.clone().setId(packet1.getId() + 30000).setOnGround(false);
+                                    if (clone instanceof PacketPlayOutEntityTeleport) {
+                                        ((PacketPlayOutEntityTeleport) clone).setY(((PacketPlayOutEntityTeleport) clone).getY() + tracker.titleHeight);
+                                    }
+                                    sendPlayerPacket(viewer.getKey(), clone);
+                                }
                             }
                         }
                     }
@@ -247,7 +257,9 @@ public class EntityTrackerEntry {
             }
 
             if (!cancelled) {
-                this.broadcastIncludingSelf(new PacketPlayOutEntityVelocity(this.tracker));
+                EntityPacket packet = new PacketPlayOutEntityVelocity(this.tracker);
+                this.broadcastIncludingSelf(packet);
+                if (tracker.getTitle() != null) this.broadcastIncludingSelf(packet.clone().setId(packet.getId() + 30000));
             }
             // CraftBukkit end
             this.tracker.velocityChanged = false;
@@ -316,7 +328,9 @@ public class EntityTrackerEntry {
 
         this.m = this.tracker.getMot();
         if (flag && !(packet instanceof PacketPlayOutSpawnEntityLiving)) {
-            consumer.accept(new PacketPlayOutEntityVelocity(this.tracker.getId(), this.m));
+            PacketPlayOutEntityVelocity vel = new PacketPlayOutEntityVelocity(this.tracker.getId(), this.m);
+            consumer.accept(vel);
+            if (tracker.getTitle() != null) consumer.accept(vel.clone().setId(vel.getId() + 30000));
         }
 
         if (this.tracker instanceof EntityLiving) {
diff --git a/src/main/java/net/minecraft/server/GroundPacket.java b/src/main/java/net/minecraft/server/GroundPacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..805236bc4ef114f4fae85ab916a122ec58751965
--- /dev/null
+++ b/src/main/java/net/minecraft/server/GroundPacket.java
@@ -0,0 +1,10 @@
+package net.minecraft.server;
+
+public interface GroundPacket<T extends PacketListener> extends EntityPacket<T> {
+
+    GroundPacket setOnGround(boolean onGround);
+
+    GroundPacket clone();
+
+    GroundPacket setId(int id);
+}
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
index d3653373ffe1510e9691418e7855772d7456423d..5639db7be9ab4e8b62ef33e57ed31cd24e1f630b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
@@ -2,7 +2,7 @@ package net.minecraft.server;
 
 import java.io.IOException;
 
-public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutEntity implements GroundPacket<PacketListenerPlayOut> {
 
     protected int entityId;
     protected short xa;
@@ -28,82 +28,47 @@ public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {
         this.entityId = i;
     }
 
-    public PacketPlayOutEntity clone() {
-        return new PacketPlayOutEntity(entityId);
+    @Override
+    public PacketPlayOutEntity setId(int id) {
+        entityId = id;
+        return this;
     }
 
-    public int getEntityId() {
+    @Override
+    public int getId() {
         return entityId;
     }
 
-    public void setEntityId(int entityId) {
-        this.entityId = entityId;
+    @Override
+    public PacketPlayOutEntity clone() {
+        return new PacketPlayOutEntity(entityId);
     }
 
     public short getXa() {
         return xa;
     }
 
-    public void setXa(short xa) {
-        this.xa = xa;
-    }
-
-    public short getYa() {
-        return ya;
-    }
-
-    public void setYa(short ya) {
-        this.ya = ya;
-    }
-
-    public short getZa() {
-        return za;
-    }
-
-    public void setZa(short za) {
-        this.za = za;
-    }
-
-    public byte getyRot() {
-        return yRot;
-    }
-
-    public void setyRot(byte yRot) {
-        this.yRot = yRot;
-    }
-
     public byte getzRot() {
         return zRot;
     }
 
-    public void setzRot(byte zRot) {
-        this.zRot = zRot;
-    }
-
     public boolean isOnGround() {
         return onGround;
     }
 
-    public void setOnGround(boolean onGround) {
+    public PacketPlayOutEntity setOnGround(boolean onGround) {
         this.onGround = onGround;
+        return this;
     }
 
     public boolean isHasRot() {
         return hasRot;
     }
 
-    public void setHasRot(boolean hasRot) {
-        this.hasRot = hasRot;
-    }
-
     public boolean isHasPos() {
         return hasPos;
     }
 
-    public void setHasPos(boolean hasPos) {
-        this.hasPos = hasPos;
-    }
-
     @Override
     public void a(PacketDataSerializer packetdataserializer) throws IOException {
         this.entityId = packetdataserializer.i();
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
index 19cf26694fea4756c49ffe50d0bb602081b11be4..6f112ba26b1c8fb679d896741fa0b0cf78a40ed2 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
@@ -5,7 +5,7 @@ import com.google.common.collect.Lists;
 import java.io.IOException;
 import java.util.List;
 
-public class PacketPlayOutEntityMetadata implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutEntityMetadata implements EntityPacket<PacketListenerPlayOut> {
 
     private int a;
     private List<DataWatcher.Item<?>> b;
@@ -28,16 +28,20 @@ public class PacketPlayOutEntityMetadata implements Packet<PacketListenerPlayOut
         this.b = b;
     }
 
-    public PacketPlayOutEntityMetadata clone() {
-        return new PacketPlayOutEntityMetadata(a, Lists.newArrayList(b));
+    @Override
+    public EntityPacket setId(int id) {
+        this.a = id;
+        return this;
     }
 
-    public int getID() {
+    @Override
+    public int getId() {
         return a;
     }
 
-    public void setID(int a) {
-        this.a = a;
+    @Override
+    public PacketPlayOutEntityMetadata clone() {
+        return new PacketPlayOutEntityMetadata(a, Lists.newArrayList(b));
     }
 
     public List<DataWatcher.Item<?>> getItems() {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
index f2e87336a3b5c888ec079da75ddc70859d6b31e9..8134a247d4ae639ed388230aa176bf623155aeb5 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
@@ -2,51 +2,111 @@ package net.minecraft.server;
 
 import java.io.IOException;
 
-public class PacketPlayOutEntityTeleport implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutEntityTeleport implements GroundPacket<PacketListenerPlayOut> {
 
-    private int a;
-    private double b;
-    private double c;
-    private double d;
-    private byte e;
-    private byte f;
-    private boolean g;
+    private int id;
+    private double x;
+    private double y;
+    private double z;
+    private byte yaw;
+    private byte pitch;
+    private boolean onGround;
 
     public PacketPlayOutEntityTeleport() {}
 
     public PacketPlayOutEntityTeleport(Entity entity) {
-        this.a = entity.getId();
-        this.b = entity.locX();
-        this.c = entity.locY();
-        this.d = entity.locZ();
-        this.e = (byte) ((int) (entity.yaw * 256.0F / 360.0F));
-        this.f = (byte) ((int) (entity.pitch * 256.0F / 360.0F));
-        this.g = entity.onGround;
+        this.id = entity.getId();
+        this.x = entity.locX();
+        this.y = entity.locY();
+        this.z = entity.locZ();
+        this.yaw = (byte) ((int) (entity.yaw * 256.0F / 360.0F));
+        this.pitch = (byte) ((int) (entity.pitch * 256.0F / 360.0F));
+        this.onGround = entity.onGround;
+    }
+
+    public PacketPlayOutEntityTeleport(int id, double x, double y, double z, byte yaw, byte pitch, boolean onGround) {
+        this.id = id;
+        this.x = x;
+        this.y = y;
+        this.z = z;
+        this.yaw = yaw;
+        this.pitch = pitch;
+        this.onGround = onGround;
     }
 
     @Override
     public void a(PacketDataSerializer packetdataserializer) throws IOException {
-        this.a = packetdataserializer.i();
-        this.b = packetdataserializer.readDouble();
-        this.c = packetdataserializer.readDouble();
-        this.d = packetdataserializer.readDouble();
-        this.e = packetdataserializer.readByte();
-        this.f = packetdataserializer.readByte();
-        this.g = packetdataserializer.readBoolean();
+        this.id = packetdataserializer.i();
+        this.x = packetdataserializer.readDouble();
+        this.y = packetdataserializer.readDouble();
+        this.z = packetdataserializer.readDouble();
+        this.yaw = packetdataserializer.readByte();
+        this.pitch = packetdataserializer.readByte();
+        this.onGround = packetdataserializer.readBoolean();
     }
 
     @Override
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
-        packetdataserializer.d(this.a);
-        packetdataserializer.writeDouble(this.b);
-        packetdataserializer.writeDouble(this.c);
-        packetdataserializer.writeDouble(this.d);
-        packetdataserializer.writeByte(this.e);
-        packetdataserializer.writeByte(this.f);
-        packetdataserializer.writeBoolean(this.g);
+        packetdataserializer.d(this.id);
+        packetdataserializer.writeDouble(this.x);
+        packetdataserializer.writeDouble(this.y);
+        packetdataserializer.writeDouble(this.z);
+        packetdataserializer.writeByte(this.yaw);
+        packetdataserializer.writeByte(this.pitch);
+        packetdataserializer.writeBoolean(this.onGround);
     }
 
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
+
+    public double getX() {
+        return x;
+    }
+
+    public double getY() {
+        return y;
+    }
+
+    public double getZ() {
+        return z;
+    }
+
+    public byte getYaw() {
+        return yaw;
+    }
+
+    public byte getPitch() {
+        return pitch;
+    }
+
+    public boolean isOnGround() {
+        return onGround;
+    }
+
+    public PacketPlayOutEntityTeleport setOnGround(boolean onGround) {
+        this.onGround = onGround;
+        return this;
+    }
+
+    public PacketPlayOutEntityTeleport setY(double y) {
+        this.y = y;
+        return this;
+    }
+
+    @Override
+    public PacketPlayOutEntityTeleport setId(int id) {
+        this.id = id;
+        return this;
+    }
+
+    @Override
+    public int getId() {
+        return id;
+    }
+
+    @Override
+    public PacketPlayOutEntityTeleport clone() {
+        return new PacketPlayOutEntityTeleport(id, x, y, z, yaw, pitch, onGround);
+    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java
index d77b83231668d4963d74c925463970a2aca111eb..1090f53523ddbaa2b998c56140ddbd9a9df4ff88 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityVelocity.java
@@ -2,12 +2,12 @@ package net.minecraft.server;
 
 import java.io.IOException;
 
-public class PacketPlayOutEntityVelocity implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutEntityVelocity implements EntityPacket<PacketListenerPlayOut> {
 
-    private int a;
-    private int b;
-    private int c;
-    private int d;
+    private int id;
+    private int x;
+    private int y;
+    private int z;
 
     public PacketPlayOutEntityVelocity() {}
 
@@ -16,31 +16,54 @@ public class PacketPlayOutEntityVelocity implements Packet<PacketListenerPlayOut
     }
 
     public PacketPlayOutEntityVelocity(int i, Vec3D vec3d) {
-        this.a = i;
+        this.id = i;
         double d0 = 3.9D;
         double d1 = MathHelper.a(vec3d.x, -3.9D, 3.9D);
         double d2 = MathHelper.a(vec3d.y, -3.9D, 3.9D);
         double d3 = MathHelper.a(vec3d.z, -3.9D, 3.9D);
 
-        this.b = (int) (d1 * 8000.0D);
-        this.c = (int) (d2 * 8000.0D);
-        this.d = (int) (d3 * 8000.0D);
+        this.x = (int) (d1 * 8000.0D);
+        this.y = (int) (d2 * 8000.0D);
+        this.z = (int) (d3 * 8000.0D);
+    }
+
+    public PacketPlayOutEntityVelocity(int id, int x, int y, int z) {
+        this.id = id;
+        this.x = x;
+        this.y = y;
+        this.z = z;
+    }
+
+    @Override
+    public PacketPlayOutEntityVelocity setId(int id) {
+        this.id = id;
+        return this;
+    }
+
+    @Override
+    public int getId() {
+        return id;
+    }
+
+    @Override
+    public EntityPacket clone() {
+        return new PacketPlayOutEntityVelocity(id, x, y, z);
     }
 
     @Override
     public void a(PacketDataSerializer packetdataserializer) throws IOException {
-        this.a = packetdataserializer.i();
-        this.b = packetdataserializer.readShort();
-        this.c = packetdataserializer.readShort();
-        this.d = packetdataserializer.readShort();
+        this.id = packetdataserializer.i();
+        this.x = packetdataserializer.readShort();
+        this.y = packetdataserializer.readShort();
+        this.z = packetdataserializer.readShort();
     }
 
     @Override
     public void b(PacketDataSerializer packetdataserializer) throws IOException {
-        packetdataserializer.d(this.a);
-        packetdataserializer.writeShort(this.b);
-        packetdataserializer.writeShort(this.c);
-        packetdataserializer.writeShort(this.d);
+        packetdataserializer.d(this.id);
+        packetdataserializer.writeShort(this.x);
+        packetdataserializer.writeShort(this.y);
+        packetdataserializer.writeShort(this.z);
     }
 
     public void a(PacketListenerPlayOut packetlistenerplayout) {
