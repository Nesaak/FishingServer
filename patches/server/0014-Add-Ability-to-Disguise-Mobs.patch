From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nesaak <52047222+Nesaak@users.noreply.github.com>
Date: Fri, 19 Jun 2020 20:44:45 -0400
Subject: [PATCH] Add Ability to Disguise Mobs


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index e0ab058bf947ea10b37eadf6122292e708bd3809..91522a0dfe3b85b1ecbfc4cae5244e34b4b217c3 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -15,6 +15,7 @@ import java.util.Random;
 import java.util.Set;
 import java.util.UUID;
 import java.util.concurrent.atomic.AtomicInteger;
+import java.util.function.Consumer;
 import java.util.stream.Stream;
 import javax.annotation.Nullable;
 import org.apache.logging.log4j.LogManager;
@@ -202,6 +203,8 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     // Spigot end
     public boolean shouldBeRemoved; // Paper
 
+    public Consumer<PacketPlayOutSpawnConvertable> disguise;
+
     public float getBukkitYaw() {
         return this.yaw;
     }
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index 5cc89c0cf9e9e632212a9653391437cbe9b15031..9e193824c3efca992042df874690cecd144dd95e 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -276,8 +276,10 @@ public class EntityTrackerEntry {
             return;
             // CraftBukkit end
         }
-
         Packet<?> packet = this.tracker.L();
+        if (tracker.disguise != null) {
+            tracker.disguise.accept(((PacketPlayOutSpawnConvertable) packet));
+        }
 
         this.headYaw = MathHelper.d(this.tracker.getHeadRotation() * 256.0F / 360.0F);
         consumer.accept(packet);
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
index 79b54ee97c24cdb972d2358c42c16e37b93d220d..733edb29455be924758ee60328e48b4409826ce6 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutNamedEntitySpawn.java
@@ -1,9 +1,11 @@
 package net.minecraft.server;
 
+import org.bukkit.entity.LivingEntity;
+
 import java.io.IOException;
 import java.util.UUID;
 
-public class PacketPlayOutNamedEntitySpawn implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutNamedEntitySpawn implements Packet<PacketListenerPlayOut>, PacketPlayOutSpawnConvertable {
 
     private int a;
     private UUID b;
@@ -60,4 +62,38 @@ public class PacketPlayOutNamedEntitySpawn implements Packet<PacketListenerPlayO
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
+
+    @Override
+    public PacketPlayOutSpawnEntity toEntity(int id, Entity entity) {
+        return new PacketPlayOutSpawnEntity(
+                a, b,
+                c, d, e,
+                entity.pitch, entity.yaw,
+                IRegistry.ENTITY_TYPE.fromId(id),
+                0, entity.getMot());
+    }
+
+    @Override
+    public PacketPlayOutSpawnEntityLiving toEntityLiving(int id, EntityLiving entity) {
+        byte j = (byte) ((int) (entity.yaw * 256.0F / 360.0F));
+        byte k = (byte) ((int) (entity.pitch * 256.0F / 360.0F));
+        byte l = (byte) ((int) (entity.aK * 256.0F / 360.0F));
+
+        Vec3D vec3d = entity.getMot();
+        int g = (int) (MathHelper.a(vec3d.x, -3.9D, 3.9D) * 8000.0D);
+        int h = (int) (MathHelper.a(vec3d.y, -3.9D, 3.9D) * 8000.0D);
+        int i = (int) (MathHelper.a(vec3d.z, -3.9D, 3.9D) * 8000.0D);
+
+        return new PacketPlayOutSpawnEntityLiving(
+                a, b, id,
+                c, d, e,
+                g, h, i,
+                j, k, l);
+    }
+
+    @Override
+    public PacketPlayOutNamedEntitySpawn toPlayer(UUID uuid) {
+        this.b = uuid;
+        return this;
+    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnConvertable.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnConvertable.java
new file mode 100644
index 0000000000000000000000000000000000000000..b545790f13d8c97863c27cc88e83431131ada6dc
--- /dev/null
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnConvertable.java
@@ -0,0 +1,13 @@
+package net.minecraft.server;
+
+import org.bukkit.entity.LivingEntity;
+
+import java.util.UUID;
+
+public interface PacketPlayOutSpawnConvertable {
+    PacketPlayOutSpawnEntity toEntity(int id, Entity entity);
+
+    PacketPlayOutSpawnEntityLiving toEntityLiving(int id, EntityLiving entity);
+
+    PacketPlayOutNamedEntitySpawn toPlayer(UUID id);
+}
\ No newline at end of file
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
index e2f24cae8530e06e5bfe09ebf5a9ea7ee84b16cb..f6d8bed49e588c4e9f3097323502f7a5fed31096 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
@@ -3,7 +3,7 @@ package net.minecraft.server;
 import java.io.IOException;
 import java.util.UUID;
 
-public class PacketPlayOutSpawnEntity implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutSpawnEntity implements Packet<PacketListenerPlayOut>, PacketPlayOutSpawnConvertable {
 
     private int a;
     private UUID b;
@@ -97,4 +97,34 @@ public class PacketPlayOutSpawnEntity implements Packet<PacketListenerPlayOut> {
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
+
+    @Override
+    public PacketPlayOutSpawnEntity toEntity(int id, Entity entity) {
+        k = IRegistry.ENTITY_TYPE.fromId(id);
+        return this;
+    }
+
+    @Override
+    public PacketPlayOutSpawnEntityLiving toEntityLiving(int id, EntityLiving entity) {
+        byte yaw = (byte) ((int) (entity.yaw * 256.0F / 360.0F));
+        byte pitch = (byte) ((int) (entity.pitch * 256.0F / 360.0F));
+        byte ak = (byte) ((int) (entity.aK* 256.0F / 360.0F));
+        Vec3D vec3d = entity.getMot();
+        int g = (int) (MathHelper.a(vec3d.x, -3.9D, 3.9D) * 8000.0D);
+        int h = (int) (MathHelper.a(vec3d.y, -3.9D, 3.9D) * 8000.0D);
+        int i = (int) (MathHelper.a(vec3d.z, -3.9D, 3.9D) * 8000.0D);
+
+        return new PacketPlayOutSpawnEntityLiving(
+                a, b, id,
+                c, d, e,
+                g, h,  i,
+                yaw, pitch, ak);
+    }
+
+    @Override
+    public PacketPlayOutNamedEntitySpawn toPlayer(UUID id) {
+        return new PacketPlayOutNamedEntitySpawn(a, id,
+                c, d, e,
+                (byte) j, (byte) i);
+    }
 }
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
index 54caee23b6713ac5ebc77f4dd91cbdbc2d6e64b9..3eec28034f1660c41fe1c3c175844636c0687256 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
@@ -3,7 +3,7 @@ package net.minecraft.server;
 import java.io.IOException;
 import java.util.UUID;
 
-public class PacketPlayOutSpawnEntityLiving implements Packet<PacketListenerPlayOut> {
+public class PacketPlayOutSpawnEntityLiving implements Packet<PacketListenerPlayOut>, PacketPlayOutSpawnConvertable {
 
     private int a;
     private UUID b;
@@ -91,4 +91,27 @@ public class PacketPlayOutSpawnEntityLiving implements Packet<PacketListenerPlay
     public void a(PacketListenerPlayOut packetlistenerplayout) {
         packetlistenerplayout.a(this);
     }
+
+    @Override
+    public PacketPlayOutSpawnEntity toEntity(int id, Entity entity) {
+        return new PacketPlayOutSpawnEntity(
+                a, b,
+                c, d, e,
+                entity.pitch, entity.yaw,
+                IRegistry.ENTITY_TYPE.fromId(id),
+                0, entity.getMot());
+    }
+
+    @Override
+    public PacketPlayOutSpawnEntityLiving toEntityLiving(int id, EntityLiving entity) {
+        this.c = id;
+        return this;
+    }
+
+    @Override
+    public PacketPlayOutNamedEntitySpawn toPlayer(UUID id) {
+        return new PacketPlayOutNamedEntitySpawn(a, id,
+                c, d, e,
+                j, k);
+    }
 }
